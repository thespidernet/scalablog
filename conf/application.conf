# * ***************************************************************************
# * ScalaBlog. 
# * Copyright 2014-2015 Gavin Baumanis
# * gavinb@thespidernet.com 
# * http://www.thespidernet.com/scalablog
# *
# * Licensed under the Apache License, Version 2.0 (the "License");
# * you may not use this file except in compliance with the License.
# * You may obtain a copy of the License at
# *
# *     http://www.apache.org/licenses/LICENSE-2.0
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *
# *
# * The ScalaBlog is a fully functioning Blog.
# * It was originally written as a training tool for Scala and the TypeSafe
# * technology stack; http://typesafe.com/products/typesafe-reactive-platform
# *
# * It is subsequently written with verbose comments and with readability
# * always in focus. Thus we have not always used the most concise / terse
# * code that we could have. Which is a real strength of Scala.
# *
# * The ScalaBlog also became the training ground for our efforts to
# * better understand "BIG DATA". Subsequently it uses Hadoop and some related
# * technologies that simply just aren't a requirement for a blog application.
# * Nonetheless - they are used here!
# *
# * The ScalaBlog application is free to use.
# *
# *
# * The blog utilises the following technology;
# *
# * Scala 2.11.6
# * Scala Test 2.2.5 - Testing Framework
# * Play 2.4.3 - MVC Framework
# * Akka 2.3.9 - Messaging
# * spray 2.3.3 - http
# * Cassandra Database 2.1.8
# * Hadoop / Hadoop File System 2.7.1
# * jQuery 2.1.4 - JavaScript Library
# * Bootstrap 3.3.4 - JavaScript Library
# *
# * ***************************************************************************
  
  
# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret="lSOFOtqO?16Fud63fG44Mv9aNjrweg7s1TglR_xRkIX8=EXqc8s]D?r2Q`C12Pot"

# The application languages
# ~~~~~
play.i18n.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

